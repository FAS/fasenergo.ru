const { join, normalize } = require('path')

/**
 * Get image size and its srcset
 * @param {string}   src        Path to image with filename
 * @param {object[]} imagesData Specific object with information about each image.
 *                              Generated by `grunt-image-size` task
 * @param {string}   baseDir    Root dir, where build files stored. Used for paths resolving
 * @return {object} Image dimensions info
 */
const imageSize = (src, imagesData, baseDir) => {
  if (typeof src !== 'string') throw new Error(`[imageSize] \`src\` must be a string, \`${typeof src}\` provided`)

  if (src.startsWith('http') || src.startsWith('ftp')) return { src, srcset: () => null }

  if (!src.startsWith('/')) throw new Error(`[imageSize] document-relative urls not supported yet, \`${src}\` provided`)
  if (typeof baseDir !== 'string') throw new Error(`[imageSize] \`baseDir\` must be a string, \`${typeof baseDir}\` provided`)
  if (!Array.isArray(imagesData)) throw new Error(`[imageSize] \`imagesData\` must be an array, \`${typeof imagesData}\` provided`)

  const fullSrc = join(baseDir, src)
  const image = imagesData.find((e) => fullSrc === normalize(e.name))

  if (!image) throw new Error(`[imageSize] image \`${src}\` did not match any image data`)

  return {
    src,
    width: image.width,
    height: image.height
  }
}

module.exports = imageSize
