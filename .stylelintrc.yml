---
plugins:
  - stylelint-scss

extends: stylelint-config-standard

rules:

  # Issues
  # ------
  # Disabled rules due to various issues

  # @todo No way to allow newline after ruleset
  #       .test {
  #         border: 1px;
  #
  #         > .child {
  #           margin-top: 21px;
  #           margin-bottom: 21px;
  #         }
  #       // <- no way to force this newline only after ruleset, but not property
  #       }
  block-closing-brace-empty-line-before: null

  # @todo No way to provide `at least single space` for aligned groups
  #                      \/ - here
  #       .margin-bottom  { margin-bottom: $s-blog-post-spacing; }
  #       .margin-top     { margin-top: $s-blog-post-spacing; }
  #       .margin-top\+   { margin-top: $s-blog-post-spacing * 2; }
  #       .margin-top\+\+ { margin-top: $s-blog-post-spacing * 3; }
  block-opening-brace-space-before: null

  # @todo No way to provide `at least single space` for aligned groups
  #                                                            \/ - here
  #       .margin-bottom  { margin-bottom: $s-blog-post-spacing !important; }
  #       .margin-top     { margin-top: $s-blog-post-spacing    !important; }
  declaration-bang-space-before: null

  # @todo No way to provide `at least single space` for aligned groups
  #                     \/ - here
  #       padding-top:    21px;
  #       padding-bottom: 31px;
  #       padding-right:  10px;
  #       padding-left:   10px;
  declaration-colon-space-after: null

  # @todo No way to allow empty lines between property groups
  #       .blog-post {
  #         font-size: $s-blog-post-font-size;
  #         // <- empty line here will be an error
  #         line-height: $s-blog-post-line-height;
  #         // <- empty line here will be an error
  #         font-weight: 300;
  #       }
  declaration-empty-line-before: null

  # @todo Doesn't support BEM-like indentation
  #      .test { display: flex; }
  #        .test__item { box-sizing: border-box; } <- will yeild an error about wrong indentation
  # @todo Has issues with comment inside Sass maps
  #       This will say that test1 and everything beyond have wrong indentation
  #       $map: (
  #         test1: (
  #           val1:  12px, // comment
  #           val2: 10px // comment
  #         ),
  #         test2: (
  #           val1: 36px, // comment
  #           val2: 30px // comment
  #         )
  #       );
  indentation: null

  # @todo Raises errors with Sass comment right after selector
  #       menu, // 1
  #       nav, // 2
  #       summary, // 1 <- will raise `Expected single space after "{" of a single-line block block-opening-brace-space-after` and `Expected newline after "{" of a multi-line block block-opening-brace-newline-after`
  #       section { display: block; } <- will raise `Expected newline before "}" of a multi-line block block-closing-brace-newline-before`
  block-opening-brace-newline-after: null
  block-closing-brace-newline-before: null
  block-opening-brace-space-after: null

  # @todo Has issues with grouped includes
  #       code {
  #         @include ekzo-theme() { color: ekzo-theme(code); }
  #         @include ekzo-theme() { background-color: ekzo-theme(code-bg); } <- will raise `Expected empty line before at-rule at-rule-empty-line-before`
  #
  #         border-radius: 2px;
  #       }
  at-rule-empty-line-before: null

  # @todo Excepts `Hz` and `kHz` units to be `hz` and `khz` which isn't correct.
  unit-case: null
  unit-no-unknown: null

  # @todo No way to dissalow newlines after colon
  declaration-colon-newline-after: null

  # Standard overrides
  # ------------------

  block-no-empty: null
  function-max-empty-lines: 1
  no-missing-end-of-source-newline: null
  rule-nested-empty-line-before:
    - always-multi-line
    - ignore:
      - after-comment
  selector-pseudo-element-colon-notation: single
  number-leading-zero: never

  # Additions
  # ---------

  # @todo Falsy reports Sass map properties as color names
  #       $colors: (
  #         ivory: #fffff3,
  #         black: rgba(0, 0, 0, .3)
  #       );
  # color-named: never

  # @todo Doesn't work with Sass variables sets
  #       https://github.com/stylelint/stylelint/issues/871
  # no-browser-hacks: true

  declaration-block-no-ignored-properties: true
  media-feature-no-missing-punctuation: true
  selector-no-empty: true
  font-family-name-quotes: always-where-required
  function-url-quotes: always
  selector-attribute-quotes: always
  string-quotes: single
  at-rule-no-vendor-prefix: true
  media-feature-name-no-vendor-prefix: true
  property-no-vendor-prefix: true
  selector-no-vendor-prefix: true
  value-no-vendor-prefix: true
  max-nesting-depth: 3
  selector-max-compound-selectors: 3
  selector-max-specificity: 0,3,0
  declaration-no-important: true
  value-list-max-empty-lines: 1
  selector-no-id: true
  # @todo No way to qualifying by speicifc classes or attributes
  selector-no-qualifying-type: true
  selector-no-universal: true
  declaration-block-no-redundant-longhand-properties: null # harmful rule
  font-weight-notation: named-where-possible
  selector-root-no-composition: true
  function-url-no-scheme-relative: true
  at-rule-no-unknown:
    - true
    - ignoreAtRules:
      - extend
      - include
      - mixin
      - function
      - if
      - else
      - each
      - for
      - content
      - error
      - return
      - warn
  selector-no-type:
    - true
    - ignoreTypes:
      - a
      - li
      - tr
      - th
      - td

  # Accepts:
  #
  # m
  # main
  # main-check--modif
  # main-check__block--modif
  # M
  # Main
  # Main-check\+
  # Main-check\+-
  # Main-check--
  # Main-check--modif
  # Main-check__block
  # Main-check__block--modif
  #
  # Rejects:
  #
  # mainWrong
  # MainWrong
  # MainWrong--modif
  # MainWrong__block
  # MainWrong___block
  # MainWrong__block--modif
  # MainWrong___block--modif
  # mainWrong--modif
  # mainWrong__block--modif
  # mainWrong___block--modif
  #
  # main_wrong
  # main_Wrong
  # Main_wrong
  # Main_wrong--modif
  # Main_wrong__block
  # Main_wrong___block
  # Main_wrong__block--modif
  # Main_wrong___block--modif
  # main_wrong--modif
  # main_wrong__block--modif
  # main_wrong___block--modif
  selector-class-pattern:
    - ^([A-Z]?[a-z]*[-]?[a-z0-9\-]*)(\.[a-z0-9\-]*)?(__[a-z0-9]*[-]?[a-z0-9\-]*)?(--[a-z0-9]*[-]?[a-z0-9\-]*)?(\:[a-z]*)*([\\+\-]*?)*$
    # @todo Temporary disabled due to issue with Sass `#{}` inside selectors
    # - resolveNestedSelectors: true
  selector-id-pattern: ^([A-Z]?[a-z]*[-]?[a-z0-9\-]*)(\.[a-z0-9\-]*)?(__[a-z0-9]*[-]?[a-z0-9\-]*)?(--[a-z0-9]*[-]?[a-z0-9\-]*)?(\:[a-z]*)*([\\+\-]*?)*$
  declaration-block-semicolon-newline-before: never-multi-line
  function-comma-newline-before: never-multi-line
  media-query-list-comma-newline-before: never-multi-line
  no-unknown-animations: true
  root-no-standard-properties: true
  selector-list-comma-newline-before: never-multi-line
  selector-list-comma-space-after: always-single-line
  time-no-imperceptible: true
  value-keyword-case:
    - lower
    - ignoreKeywords:
      - currentColor
      # @todo Wrongly checks values of Sass variables too
      - Icon--
      - Sprite--
  value-list-comma-newline-before: never-multi-line
  no-duplicate-selectors: true
  rule-non-nested-empty-line-before:
    - always-multi-line
    - ignore:
      - after-comment
  # @todo Have some issues with Sass placeholders:
  #       `Expected selector "%#{$ekzo-objects-ns}nav > li > a" to come before selector ".#{$ekzo-objects-ns}nav > a"`
  no-descending-specificity: true

  # Optionals
  # ---------

  # selector-no-attribute: true
  # no-unsupported-browser-features: true
  # no-indistinguishable-colors: true

  # Scss
  # ---------

  scss/at-function-pattern: ^([A-Z]?[a-z]*[-]?[a-z0-9\-]*)(\.[a-z0-9\-]*)?(__[a-z0-9]*[-]?[a-z0-9\-]*)?(--[a-z0-9]*[-]?[a-z0-9\-]*)?(\:[a-z]*)*([\\+\-]*?)*$
  scss/at-mixin-pattern: ^([A-Z]?[a-z]*[-]?[a-z0-9\-]*)(\.[a-z0-9\-]*)?(__[a-z0-9]*[-]?[a-z0-9\-]*)?(--[a-z0-9]*[-]?[a-z0-9\-]*)?(\:[a-z]*)*([\\+\-]*?)*$
  scss/dollar-variable-pattern: ^([A-Z]?[a-z]*[-]?[a-z0-9\-]*)(\.[a-z0-9\-]*)?(__[a-z0-9]*[-]?[a-z0-9\-]*)?(--[a-z0-9]*[-]?[a-z0-9\-]*)?(\:[a-z]*)*([\\+\-]*?)*$

  # @todo Doesn't work with `#{}` inside selectors
  #       `Expected %-placeholder "%#{$ekzo-generics-ns}link" to match specified pattern`
  # scss/percent-placeholder-pattern: ^([A-Z]?[a-z]*[-]?[a-z0-9\-]*)(\.[a-z0-9\-]*)?(__[a-z0-9]*[-]?[a-z0-9\-]*)?(--[a-z0-9]*[-]?[a-z0-9\-]*)?(\:[a-z]*)*([\\+\-]*?)*$

  scss/at-import-no-partial-leading-underscore: true
  scss/at-import-partial-extension-blacklist:
    - scss
  scss/at-mixin-argumentless-call-parentheses: always

  # @todo No way to disallow newlines after colon
  # scss/dollar-variable-colon-newline-after: never

  # @todo No way to require at least single space
  #               \/ - here
  #       $test:     20px;
  #       $test-val: 25px;
  # scss/dollar-variable-colon-space-after: always-single-line

  scss/dollar-variable-colon-space-before: never
  scss/dollar-variable-no-missing-interpolation: true
  scss/double-slash-comment-whitespace-inside: always
  scss/operator-no-newline-after: true
  scss/operator-no-newline-before: true

  # @todo Wrongly reports Sass maps keys
  #       $test: (
  #         \+:   10px,
  #         \+\+: 20px,
  #       );
  # @todo Wrongly reports `@extend .h-trans--all\+;`
  scss/operator-no-unspaced: true

  scss/selector-no-redundant-nesting-selector: true

  # Those are unused due to codestyle and setted by `block-closing-brace-newline-after` value
  # scss/at-else-closing-brace-newline-after:
  # scss/at-if-closing-brace-newline-after:
  # scss/at-else-empty-line-before:


  # @todo Wrongly reports unneded space after `}` when there is a newlines
  # scss/at-if-closing-brace-space-after: never-intermediate
  # scss/at-else-closing-brace-space-after: never-intermediate

  # @todo Wrongly reports:
  #  .#{$ekzo-o-ns}aspect-ratio4\:3  { @include ekzo-aspect-ratio(4, 3); }
  #  .#{$ekzo-o-ns}aspect-ratio16\:9 { @include ekzo-aspect-ratio(16, 9); }
  #  .#{$ekzo-o-ns}aspect-ratio21\:9 { @include ekzo-aspect-ratio(21, 9); }
  scss/declaration-nested-properties: never

  scss/declaration-nested-properties-no-divided-groups: true

  # @todo `ignore after-comment` seems to no work:
  #   // comment
  #   $ekzo-tooltip-height: 1px;
  # @todo There is no way to allow dividing of variables groups by newline:
  #   $var1: 1;
  #   $var2: 2;
  #
  #   $other1: 11;
  #   $other2: 22;
  # scss/dollar-variable-empty-line-before:
  #   - always
  #   - except:
  #     - first-nested
  #     - after-dollar-variable
  #   - ignore:
  #     - after-comment
  #     - inside-single-line-block